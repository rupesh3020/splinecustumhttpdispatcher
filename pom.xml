<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.abnamro.dmp.mdc</groupId>
  <artifactId>splinecustomhttpdispatcher</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<scala.version>2.12.3</scala.version>
		<scala.compat.version>2.12</scala.compat.version>
		<scala.binary.version>2.12</scala.binary.version>
		
		<spark.version>${spark-32.version}</spark.version>
        <spark-22.version>2.2.3</spark-22.version>
        <spark-23.version>2.3.4</spark-23.version>
        <spark-24.version>2.4.8</spark-24.version>
        <spark-30.version>3.0.3</spark-30.version>
        <spark-31.version>3.1.3</spark-31.version>
        <spark-32.version>3.2.1</spark-32.version>
        <spark-33.version>3.3.0</spark-33.version>
	</properties>

	<dependencies>
	<!-- Spark -->

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-hive_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql-kafka-0-10_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-avro_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>com.databricks</groupId>
                <artifactId>spark-xml_${scala.binary.version}</artifactId>
                <version>0.5.0</version>
            </dependency>
            <dependency>
                <groupId>com.crealytics</groupId>
                <artifactId>spark-excel_${scala.binary.version}</artifactId>
                <version>0.13.7</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.spark</groupId>
                <artifactId>spark-cassandra-connector_${scala.binary.version}</artifactId>
                <version>2.4.2</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb.spark</groupId>
                <artifactId>mongo-spark-connector_${scala.binary.version}</artifactId>
                <version>2.4.1</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch-hadoop</artifactId>
                <version>7.6.0</version>
            </dependency>
            <dependency>
                <groupId>za.co.absa.cobrix</groupId>
                <artifactId>spark-cobol_${scala.binary.version}</artifactId>
                <version>2.0.8</version>
            </dependency>
	
		<!-- https://mvnrepository.com/artifact/za.co.absa.spline.agent.spark/spark-3.2-spline-agent-bundle -->
		<dependency>
		    <groupId>za.co.absa.spline.agent.spark</groupId>
		    <artifactId>spark-3.2-spline-agent-bundle_2.12</artifactId>
		    <version>0.7.10</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>org.clapper</groupId>
			<artifactId>grizzled-slf4j_2.12</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.12.3</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<!-- see http://davidb.github.com/scala-maven-plugin -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<args>
								<arg>-feature</arg>
								<arg>-deprecation</arg>
								<arg>-dependencyfile</arg>
								<arg>${project.build.directory}/.scala_dependencies</arg>
							</args>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
					<!-- If you have classpath issue like NoDefClassError,... -->
					<!-- useManifestOnlyJar>false</useManifestOnlyJar -->
					<includes>
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>
				</configuration>
			</plugin>

			<!-- Use the shade plugin to remove all the provided artifacts (such as 
				spark itself) from the uber jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<!-- Remove signed keys to prevent security exceptions on uber jar -->
							<!-- See https://stackoverflow.com/a/6743609/7245239 -->
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>AzureHttpLineageDispatcher</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
							<artifactSet>
								<excludes>
									<exclude>javax.servlet:*</exclude>
									<exclude>org.apache.hadoop:*</exclude>
									<exclude>org.apache.maven.plugins:*</exclude>
									<exclude>org.apache.spark:*</exclude>
									<exclude>org.apache.avro:*</exclude>
									<exclude>org.apache.parquet:*</exclude>
									<exclude>org.scala-lang:*</exclude>
								</excludes>
							</artifactSet>
							<finalName>${project.artifactId}-${project.version}-uber</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>